name: Publish Docker image

on:
  push:
    branches:
      - master

    tags:
      - v*

env:
  IMAGE_NAME: "gluo-meme-generator"
  APP_NAME: "memegen"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker run --rm -v $PWD/apache/app:/app composer composer require aws/aws-sdk-php
          docker run --rm -v $PWD/apache/app:/app composer composer require microsoft/azure-storage-blob
          docker-compose --file docker-compose-test.yml build
          docker-compose --file docker-compose-test.yml up -d
          curl http://localhost:8080/index.php
          docker-compose --file docker-compose-test.yml down

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker run --rm -v $PWD/apache/app:/app composer composer require aws/aws-sdk-php
          docker run --rm -v $PWD/apache/app:/app composer composer require microsoft/azure-storage-blob
          docker build apache/. --file apache/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          ### Set the image ID variable
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          ### Formatting of the image tag
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          #echo IMAGE_ID=$IMAGE_ID
          #echo VERSION=$VERSION

          ### Push the image to Github Packages
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Deploy to AZ App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ghcr.io/${{ github.repository }}/${{ env.IMAGE_ID }}:${{ VERSION }}
